@layout MudBlazorLayout
@page "/register"
@using PMS.UI.StaticDetails
@using MudBlazor
@* <h3>Register</h3> *@
<div class="wrapper">
    <CustomHeader />
    
    @if (IsLoading)
    {
        <div class="loading-overlay">
            @*  <div class="spinner"></div> *@
            <div id="preloader"></div>
        </div>
    }
    else
    {
        <div class="container py-4 h-100">
            <div class="row d-flex justify-content-center align-items-center h-100 pt-5">
                <div class="col col-xl-4">
                    <div class="form-container">
@*                         @if (!string.IsNullOrEmpty(Message))
                        {
                            <div class="alert alert-danger">
                                @Message
                            </div>
                        } *@
                        <EditForm Model="@_registerModel" OnValidSubmit="OnValidSubmit">
                            <DataAnnotationsValidator />
                            <MudGrid>
                                <MudItem xs="12" sm="12">
                                    <MudCard>
                                        <MudCardContent>
                                            <MudItem xs="12">
                                                <MudText Typo="Typo.h4">Register</MudText>
                                            </MudItem>
                                            <MudTextField Label="First Name"  @bind-Value="_registerModel.FirstName" For="@(() => _registerModel.FirstName)" />
                                            <MudTextField Label="Last Name" @bind-Value="_registerModel.LastName" For="@(() => _registerModel.LastName)" />
                                            <MudTextField Label="Email" @bind-Value="_registerModel.Email" For="@(() => _registerModel.Email)" Disabled="@IsEmailDisabled" />
                                            @if (EmailExists && !string.IsNullOrEmpty(_registerModel.Email))
                                            {
                                                <div class="text-danger">Email already exists.</div>
                                            }
                                            <MudTextField Label="Phone Number"  @bind-Value="_registerModel.PhoneNumber" For="@(() => _registerModel.PhoneNumber)" />
                                            <MudItem Class="mt-2" xs="12">
                                                <MudText Typo="Typo.subtitle1">Gender</MudText>
                                                <MudRadioGroup T="string" @bind-Value="_registerModel.Gender" For="@(() => _registerModel.Gender)">
                                                    <MudRadio Value="UserGender.Male">Male</MudRadio>
                                                    <MudRadio Value="UserGender.Female">Female</MudRadio>
                                                </MudRadioGroup>
                                            </MudItem>
                                            <MudItem xs="12">
                                                <MudDatePicker Label="Date Of Birth" Class="mt-2" Color="Color.Secondary" @bind-Date="_registerModel.DateOfBirth" Rounded="true" For="@(() => _registerModel.DateOfBirth)" />
                                            </MudItem>

                                            <MudItem xs="12" Class="mt-3">
                                                <MudSelect T="Guid" Label="Parish" @bind-Value="_registerModel.ClientRegionId" Disabled="@IsEmailDisabled">
                                                    <MudSelectItem T="Guid" Value="@Guid.Empty" Disabled>--Select Parish--</MudSelectItem>
                                                    @foreach (var region in Regions)

                                                    {
                                                        <MudSelectItem T="Guid" Value="@region.Id">@region.ParishName</MudSelectItem>
                                                    }
                                                </MudSelect>
                                                <ValidationMessage For="@(() => _registerModel.ClientRegionId)" />

                                               
                                            </MudItem>
                                            <MudTextField Label="Password" HelperText="Choose a strong password"
                                                          @bind-Value="_registerModel.Password"
                                                          For="@(() => _registerModel.Password)"
                                                          Adornment="Adornment.End" InputType="@_passwordInput"
                                                          OnAdornmentClick="TogglePasswordVisibility"
                                                          AdornmentIcon="@_passwordInputIcon" />

                                            <MudTextField Label="Confirm Password" HelperText="Repeat the password"
                                                          Class="confirm-password" @bind-Value="_registerModel.ConfirmPassword"
                                                          For="@(() => _registerModel.ConfirmPassword)"
                                                          Adornment="Adornment.End" InputType="@_passwordConfirmationInput"
                                                          OnAdornmentClick="TogglePasswordConfirmationVisibility"
                                                          AdornmentIcon="@_passwordConfirmationInputIcon" />
                                        </MudCardContent>
                                        <MudCardActions>
                                            <MudButton ButtonType="ButtonType.Submit" FullWidth="true" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Register</MudButton>
                                        </MudCardActions>
                                    </MudCard>
                                </MudItem>
                            </MudGrid>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    }
    <Footer />
</div>
